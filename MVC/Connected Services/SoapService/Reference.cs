//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVC.SoapService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SoapService.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        WcfServiceLibrary1.CompositeType GetDataUsingDataContract(WcfServiceLibrary1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<WcfServiceLibrary1.CompositeType> GetDataUsingDataContractAsync(WcfServiceLibrary1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetStudents", ReplyAction="http://tempuri.org/IService1/GetStudentsResponse")]
        ApplicationService.DTO.StudentDTO[] GetStudents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetStudents", ReplyAction="http://tempuri.org/IService1/GetStudentsResponse")]
        System.Threading.Tasks.Task<ApplicationService.DTO.StudentDTO[]> GetStudentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetStudentById", ReplyAction="http://tempuri.org/IService1/GetStudentByIdResponse")]
        ApplicationService.DTO.StudentDTO GetStudentById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetStudentById", ReplyAction="http://tempuri.org/IService1/GetStudentByIdResponse")]
        System.Threading.Tasks.Task<ApplicationService.DTO.StudentDTO> GetStudentByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostStudent", ReplyAction="http://tempuri.org/IService1/PostStudentResponse")]
        string PostStudent(ApplicationService.DTO.StudentDTO studentDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostStudent", ReplyAction="http://tempuri.org/IService1/PostStudentResponse")]
        System.Threading.Tasks.Task<string> PostStudentAsync(ApplicationService.DTO.StudentDTO studentDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteStudent", ReplyAction="http://tempuri.org/IService1/DeleteStudentResponse")]
        string DeleteStudent(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteStudent", ReplyAction="http://tempuri.org/IService1/DeleteStudentResponse")]
        System.Threading.Tasks.Task<string> DeleteStudentAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditStudent", ReplyAction="http://tempuri.org/IService1/EditStudentResponse")]
        string EditStudent(ApplicationService.DTO.StudentDTO studentDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditStudent", ReplyAction="http://tempuri.org/IService1/EditStudentResponse")]
        System.Threading.Tasks.Task<string> EditStudentAsync(ApplicationService.DTO.StudentDTO studentDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetFaculties", ReplyAction="http://tempuri.org/IService1/GetFacultiesResponse")]
        ApplicationService.DTO.FacultyDTO[] GetFaculties();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetFaculties", ReplyAction="http://tempuri.org/IService1/GetFacultiesResponse")]
        System.Threading.Tasks.Task<ApplicationService.DTO.FacultyDTO[]> GetFacultiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostFaculty", ReplyAction="http://tempuri.org/IService1/PostFacultyResponse")]
        string PostFaculty(ApplicationService.DTO.FacultyDTO facultyDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostFaculty", ReplyAction="http://tempuri.org/IService1/PostFacultyResponse")]
        System.Threading.Tasks.Task<string> PostFacultyAsync(ApplicationService.DTO.FacultyDTO facultyDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteFaculty", ReplyAction="http://tempuri.org/IService1/DeleteFacultyResponse")]
        string DeleteFaculty(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteFaculty", ReplyAction="http://tempuri.org/IService1/DeleteFacultyResponse")]
        System.Threading.Tasks.Task<string> DeleteFacultyAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetFacultyByID", ReplyAction="http://tempuri.org/IService1/GetFacultyByIDResponse")]
        ApplicationService.DTO.FacultyDTO GetFacultyByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetFacultyByID", ReplyAction="http://tempuri.org/IService1/GetFacultyByIDResponse")]
        System.Threading.Tasks.Task<ApplicationService.DTO.FacultyDTO> GetFacultyByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditFaculty", ReplyAction="http://tempuri.org/IService1/EditFacultyResponse")]
        string EditFaculty(ApplicationService.DTO.FacultyDTO facultyDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditFaculty", ReplyAction="http://tempuri.org/IService1/EditFacultyResponse")]
        System.Threading.Tasks.Task<string> EditFacultyAsync(ApplicationService.DTO.FacultyDTO facultyDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSpecialities", ReplyAction="http://tempuri.org/IService1/GetSpecialitiesResponse")]
        ApplicationService.DTO.SpecialityDTO[] GetSpecialities();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSpecialities", ReplyAction="http://tempuri.org/IService1/GetSpecialitiesResponse")]
        System.Threading.Tasks.Task<ApplicationService.DTO.SpecialityDTO[]> GetSpecialitiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSpecialityById", ReplyAction="http://tempuri.org/IService1/GetSpecialityByIdResponse")]
        ApplicationService.DTO.SpecialityDTO GetSpecialityById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSpecialityById", ReplyAction="http://tempuri.org/IService1/GetSpecialityByIdResponse")]
        System.Threading.Tasks.Task<ApplicationService.DTO.SpecialityDTO> GetSpecialityByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostSpeciality", ReplyAction="http://tempuri.org/IService1/PostSpecialityResponse")]
        string PostSpeciality(ApplicationService.DTO.SpecialityDTO specialityDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostSpeciality", ReplyAction="http://tempuri.org/IService1/PostSpecialityResponse")]
        System.Threading.Tasks.Task<string> PostSpecialityAsync(ApplicationService.DTO.SpecialityDTO specialityDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteSpeciality", ReplyAction="http://tempuri.org/IService1/DeleteSpecialityResponse")]
        string DeleteSpeciality(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteSpeciality", ReplyAction="http://tempuri.org/IService1/DeleteSpecialityResponse")]
        System.Threading.Tasks.Task<string> DeleteSpecialityAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditSpeciality", ReplyAction="http://tempuri.org/IService1/EditSpecialityResponse")]
        string EditSpeciality(ApplicationService.DTO.SpecialityDTO specialityDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditSpeciality", ReplyAction="http://tempuri.org/IService1/EditSpecialityResponse")]
        System.Threading.Tasks.Task<string> EditSpecialityAsync(ApplicationService.DTO.SpecialityDTO specialityDTO);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : MVC.SoapService.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<MVC.SoapService.IService1>, MVC.SoapService.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public WcfServiceLibrary1.CompositeType GetDataUsingDataContract(WcfServiceLibrary1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<WcfServiceLibrary1.CompositeType> GetDataUsingDataContractAsync(WcfServiceLibrary1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public ApplicationService.DTO.StudentDTO[] GetStudents() {
            return base.Channel.GetStudents();
        }
        
        public System.Threading.Tasks.Task<ApplicationService.DTO.StudentDTO[]> GetStudentsAsync() {
            return base.Channel.GetStudentsAsync();
        }
        
        public ApplicationService.DTO.StudentDTO GetStudentById(int id) {
            return base.Channel.GetStudentById(id);
        }
        
        public System.Threading.Tasks.Task<ApplicationService.DTO.StudentDTO> GetStudentByIdAsync(int id) {
            return base.Channel.GetStudentByIdAsync(id);
        }
        
        public string PostStudent(ApplicationService.DTO.StudentDTO studentDTO) {
            return base.Channel.PostStudent(studentDTO);
        }
        
        public System.Threading.Tasks.Task<string> PostStudentAsync(ApplicationService.DTO.StudentDTO studentDTO) {
            return base.Channel.PostStudentAsync(studentDTO);
        }
        
        public string DeleteStudent(int value) {
            return base.Channel.DeleteStudent(value);
        }
        
        public System.Threading.Tasks.Task<string> DeleteStudentAsync(int value) {
            return base.Channel.DeleteStudentAsync(value);
        }
        
        public string EditStudent(ApplicationService.DTO.StudentDTO studentDTO) {
            return base.Channel.EditStudent(studentDTO);
        }
        
        public System.Threading.Tasks.Task<string> EditStudentAsync(ApplicationService.DTO.StudentDTO studentDTO) {
            return base.Channel.EditStudentAsync(studentDTO);
        }
        
        public ApplicationService.DTO.FacultyDTO[] GetFaculties() {
            return base.Channel.GetFaculties();
        }
        
        public System.Threading.Tasks.Task<ApplicationService.DTO.FacultyDTO[]> GetFacultiesAsync() {
            return base.Channel.GetFacultiesAsync();
        }
        
        public string PostFaculty(ApplicationService.DTO.FacultyDTO facultyDTO) {
            return base.Channel.PostFaculty(facultyDTO);
        }
        
        public System.Threading.Tasks.Task<string> PostFacultyAsync(ApplicationService.DTO.FacultyDTO facultyDTO) {
            return base.Channel.PostFacultyAsync(facultyDTO);
        }
        
        public string DeleteFaculty(int value) {
            return base.Channel.DeleteFaculty(value);
        }
        
        public System.Threading.Tasks.Task<string> DeleteFacultyAsync(int value) {
            return base.Channel.DeleteFacultyAsync(value);
        }
        
        public ApplicationService.DTO.FacultyDTO GetFacultyByID(int id) {
            return base.Channel.GetFacultyByID(id);
        }
        
        public System.Threading.Tasks.Task<ApplicationService.DTO.FacultyDTO> GetFacultyByIDAsync(int id) {
            return base.Channel.GetFacultyByIDAsync(id);
        }
        
        public string EditFaculty(ApplicationService.DTO.FacultyDTO facultyDTO) {
            return base.Channel.EditFaculty(facultyDTO);
        }
        
        public System.Threading.Tasks.Task<string> EditFacultyAsync(ApplicationService.DTO.FacultyDTO facultyDTO) {
            return base.Channel.EditFacultyAsync(facultyDTO);
        }
        
        public ApplicationService.DTO.SpecialityDTO[] GetSpecialities() {
            return base.Channel.GetSpecialities();
        }
        
        public System.Threading.Tasks.Task<ApplicationService.DTO.SpecialityDTO[]> GetSpecialitiesAsync() {
            return base.Channel.GetSpecialitiesAsync();
        }
        
        public ApplicationService.DTO.SpecialityDTO GetSpecialityById(int id) {
            return base.Channel.GetSpecialityById(id);
        }
        
        public System.Threading.Tasks.Task<ApplicationService.DTO.SpecialityDTO> GetSpecialityByIdAsync(int id) {
            return base.Channel.GetSpecialityByIdAsync(id);
        }
        
        public string PostSpeciality(ApplicationService.DTO.SpecialityDTO specialityDTO) {
            return base.Channel.PostSpeciality(specialityDTO);
        }
        
        public System.Threading.Tasks.Task<string> PostSpecialityAsync(ApplicationService.DTO.SpecialityDTO specialityDTO) {
            return base.Channel.PostSpecialityAsync(specialityDTO);
        }
        
        public string DeleteSpeciality(int value) {
            return base.Channel.DeleteSpeciality(value);
        }
        
        public System.Threading.Tasks.Task<string> DeleteSpecialityAsync(int value) {
            return base.Channel.DeleteSpecialityAsync(value);
        }
        
        public string EditSpeciality(ApplicationService.DTO.SpecialityDTO specialityDTO) {
            return base.Channel.EditSpeciality(specialityDTO);
        }
        
        public System.Threading.Tasks.Task<string> EditSpecialityAsync(ApplicationService.DTO.SpecialityDTO specialityDTO) {
            return base.Channel.EditSpecialityAsync(specialityDTO);
        }
    }
}
